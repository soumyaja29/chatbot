// use server'

/**
 * @fileOverview This file defines a Genkit flow for generating chatbot responses based on user input and conversation history.
 *
 * - generateChatbotResponse - A function that generates a chatbot response.
 * - GenerateChatbotResponseInput - The input type for the generateChatbotResponse function.
 * - GenerateChatbotResponseOutput - The return type for the generateChatbotResponse function.
 */

'use server';

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateChatbotResponseInputSchema = z.object({
  userInput: z.string().describe('The user input to the chatbot.'),
  conversationHistory: z
    .array(z.object({role: z.enum(['user', 'bot']), content: z.string()}))
    .optional()
    .describe('The conversation history between the user and the bot.'),
});

export type GenerateChatbotResponseInput = z.infer<
  typeof GenerateChatbotResponseInputSchema
>;

const GenerateChatbotResponseOutputSchema = z.object({
  chatbotResponse: z.string().describe('The response generated by the chatbot.'),
});

export type GenerateChatbotResponseOutput = z.infer<
  typeof GenerateChatbotResponseOutputSchema
>;

export async function generateChatbotResponse(
  input: GenerateChatbotResponseInput
): Promise<GenerateChatbotResponseOutput> {
  return generateChatbotResponseFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateChatbotResponsePrompt',
  input: {schema: GenerateChatbotResponseInputSchema},
  output: {schema: GenerateChatbotResponseOutputSchema},
  prompt: `You are a helpful and friendly chatbot. Your goal is to provide informative and engaging responses to the user. Use the conversation history to maintain context and personalize your replies.\n\nConversation History:\n{{#each conversationHistory}}\n{{this.role}}: {{this.content}}\n{{/each}}\n\nUser Input: {{{userInput}}}\n\nChatbot Response:`,
});

const generateChatbotResponseFlow = ai.defineFlow(
  {
    name: 'generateChatbotResponseFlow',
    inputSchema: GenerateChatbotResponseInputSchema,
    outputSchema: GenerateChatbotResponseOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
